   0  $accept : program $end

   1  program : decl_list

   2  decl_list : decl_list decl
   3            |

   4  decl : var_decl
   5       | fun_decl

   6  var_decl : type_spec IDENT SEMI

   7  type_spec : BOOL
   8            | INT

   9  $$1 :

  10  $$2 :

  11  fun_decl : type_spec IDENT LCIRCLE params RCIRCLE $$1 LCURLY $$2 local_decls stmt_list RCURLY

  12  params : param_list
  13         |

  14  param_list : param_list COMMA param
  15             | param

  16  param : type_spec IDENT

  17  stmt_list : stmt_list stmt
  18            |

  19  stmt : expr_stmt
  20       | compound_stmt
  21       | if_stmt
  22       | while_stmt
  23       | return_stmt
  24       | print_stmt
  25       | SEMI

  26  expr_stmt : IDENT ASSIGN expr_stmt
  27            | expr SEMI
  28            | IDENT LSQUARE expr RSQUARE ASSIGN expr_stmt

  29  $$3 :

  30  while_stmt : WHILE LCIRCLE expr RCIRCLE $$3 stmt

  31  $$4 :

  32  compound_stmt : LCURLY $$4 local_decls stmt_list RCURLY

  33  $$5 :

  34  if_stmt : IF LCIRCLE expr RCIRCLE $$5 LCURLY stmt_list RCURLY else_stmt

  35  else_stmt : ELSE LCURLY stmt_list RCURLY
  36            |

  37  print_stmt : PRINT expr SEMI

  38  return_stmt : RETURN expr SEMI

  39  local_decls : local_decls local_decl
  40              |

  41  local_decl : type_spec IDENT SEMI

  42  arg_list : arg_list COMMA expr
  43           | expr

  44  args : arg_list
  45       |

  46  expr : expr ADD expr
  47       | expr SUB expr
  48       | expr MUL expr
  49       | expr DIV expr
  50       | expr MOD expr
  51       | expr OR expr
  52       | expr AND expr
  53       | NOT expr
  54       | expr EQ expr
  55       | expr NE expr
  56       | expr LE expr
  57       | expr LT expr
  58       | expr GE expr
  59       | expr GT expr
  60       | LCIRCLE expr RCIRCLE
  61       | IDENT
  62       | IDENT LCIRCLE args RCIRCLE
  63       | IDENT LSQUARE expr RSQUARE
  64       | BOOL_LIT
  65       | INT_LIT

state 0
	$accept : . program $end  (0)
	decl_list : .  (3)

	.  reduce 3

	program  goto 1
	decl_list  goto 2


state 1
	$accept : program . $end  (0)

	$end  accept


state 2
	program : decl_list .  (1)
	decl_list : decl_list . decl  (2)

	BOOL  shift 3
	INT  shift 4
	$end  reduce 1

	decl  goto 5
	var_decl  goto 6
	fun_decl  goto 7
	type_spec  goto 8


state 3
	type_spec : BOOL .  (7)

	.  reduce 7


state 4
	type_spec : INT .  (8)

	.  reduce 8


state 5
	decl_list : decl_list decl .  (2)

	.  reduce 2


state 6
	decl : var_decl .  (4)

	.  reduce 4


state 7
	decl : fun_decl .  (5)

	.  reduce 5


state 8
	var_decl : type_spec . IDENT SEMI  (6)
	fun_decl : type_spec . IDENT LCIRCLE params RCIRCLE $$1 LCURLY $$2 local_decls stmt_list RCURLY  (11)

	IDENT  shift 9
	.  error


state 9
	var_decl : type_spec IDENT . SEMI  (6)
	fun_decl : type_spec IDENT . LCIRCLE params RCIRCLE $$1 LCURLY $$2 local_decls stmt_list RCURLY  (11)

	LCIRCLE  shift 10
	SEMI  shift 11
	.  error


state 10
	fun_decl : type_spec IDENT LCIRCLE . params RCIRCLE $$1 LCURLY $$2 local_decls stmt_list RCURLY  (11)
	params : .  (13)

	BOOL  shift 3
	INT  shift 4
	RCIRCLE  reduce 13

	type_spec  goto 12
	params  goto 13
	param_list  goto 14
	param  goto 15


state 11
	var_decl : type_spec IDENT SEMI .  (6)

	.  reduce 6


state 12
	param : type_spec . IDENT  (16)

	IDENT  shift 16
	.  error


state 13
	fun_decl : type_spec IDENT LCIRCLE params . RCIRCLE $$1 LCURLY $$2 local_decls stmt_list RCURLY  (11)

	RCIRCLE  shift 17
	.  error


state 14
	params : param_list .  (12)
	param_list : param_list . COMMA param  (14)

	COMMA  shift 18
	RCIRCLE  reduce 12


state 15
	param_list : param .  (15)

	.  reduce 15


state 16
	param : type_spec IDENT .  (16)

	.  reduce 16


state 17
	fun_decl : type_spec IDENT LCIRCLE params RCIRCLE . $$1 LCURLY $$2 local_decls stmt_list RCURLY  (11)
	$$1 : .  (9)

	.  reduce 9

	$$1  goto 19


state 18
	param_list : param_list COMMA . param  (14)

	BOOL  shift 3
	INT  shift 4
	.  error

	type_spec  goto 12
	param  goto 20


state 19
	fun_decl : type_spec IDENT LCIRCLE params RCIRCLE $$1 . LCURLY $$2 local_decls stmt_list RCURLY  (11)

	LCURLY  shift 21
	.  error


state 20
	param_list : param_list COMMA param .  (14)

	.  reduce 14


state 21
	fun_decl : type_spec IDENT LCIRCLE params RCIRCLE $$1 LCURLY . $$2 local_decls stmt_list RCURLY  (11)
	$$2 : .  (10)

	.  reduce 10

	$$2  goto 22


state 22
	fun_decl : type_spec IDENT LCIRCLE params RCIRCLE $$1 LCURLY $$2 . local_decls stmt_list RCURLY  (11)
	local_decls : .  (40)

	.  reduce 40

	local_decls  goto 23


state 23
	fun_decl : type_spec IDENT LCIRCLE params RCIRCLE $$1 LCURLY $$2 local_decls . stmt_list RCURLY  (11)
	local_decls : local_decls . local_decl  (39)
	stmt_list : .  (18)

	BOOL  shift 3
	INT  shift 4
	NOT  reduce 18
	IDENT  reduce 18
	INT_LIT  reduce 18
	BOOL_LIT  reduce 18
	IF  reduce 18
	PRINT  reduce 18
	WHILE  reduce 18
	RETURN  reduce 18
	LCIRCLE  reduce 18
	LCURLY  reduce 18
	RCURLY  reduce 18
	SEMI  reduce 18

	type_spec  goto 24
	local_decl  goto 25
	stmt_list  goto 26


state 24
	local_decl : type_spec . IDENT SEMI  (41)

	IDENT  shift 27
	.  error


state 25
	local_decls : local_decls local_decl .  (39)

	.  reduce 39


state 26
	fun_decl : type_spec IDENT LCIRCLE params RCIRCLE $$1 LCURLY $$2 local_decls stmt_list . RCURLY  (11)
	stmt_list : stmt_list . stmt  (17)

	NOT  shift 28
	IDENT  shift 29
	INT_LIT  shift 30
	BOOL_LIT  shift 31
	IF  shift 32
	PRINT  shift 33
	WHILE  shift 34
	RETURN  shift 35
	LCIRCLE  shift 36
	LCURLY  shift 37
	RCURLY  shift 38
	SEMI  shift 39
	.  error

	while_stmt  goto 40
	compound_stmt  goto 41
	if_stmt  goto 42
	print_stmt  goto 43
	stmt  goto 44
	return_stmt  goto 45
	expr_stmt  goto 46
	expr  goto 47


state 27
	local_decl : type_spec IDENT . SEMI  (41)

	SEMI  shift 48
	.  error


state 28
	expr : NOT . expr  (53)

	NOT  shift 28
	IDENT  shift 49
	INT_LIT  shift 30
	BOOL_LIT  shift 31
	LCIRCLE  shift 36
	.  error

	expr  goto 50


state 29
	expr_stmt : IDENT . ASSIGN expr_stmt  (26)
	expr_stmt : IDENT . LSQUARE expr RSQUARE ASSIGN expr_stmt  (28)
	expr : IDENT .  (61)
	expr : IDENT . LCIRCLE args RCIRCLE  (62)
	expr : IDENT . LSQUARE expr RSQUARE  (63)

	ASSIGN  shift 51
	LCIRCLE  shift 52
	LSQUARE  shift 53
	OR  reduce 61
	AND  reduce 61
	EQ  reduce 61
	NE  reduce 61
	LE  reduce 61
	LT  reduce 61
	GE  reduce 61
	GT  reduce 61
	ADD  reduce 61
	SUB  reduce 61
	MUL  reduce 61
	DIV  reduce 61
	MOD  reduce 61
	SEMI  reduce 61


state 30
	expr : INT_LIT .  (65)

	.  reduce 65


state 31
	expr : BOOL_LIT .  (64)

	.  reduce 64


state 32
	if_stmt : IF . LCIRCLE expr RCIRCLE $$5 LCURLY stmt_list RCURLY else_stmt  (34)

	LCIRCLE  shift 54
	.  error


state 33
	print_stmt : PRINT . expr SEMI  (37)

	NOT  shift 28
	IDENT  shift 49
	INT_LIT  shift 30
	BOOL_LIT  shift 31
	LCIRCLE  shift 36
	.  error

	expr  goto 55


state 34
	while_stmt : WHILE . LCIRCLE expr RCIRCLE $$3 stmt  (30)

	LCIRCLE  shift 56
	.  error


state 35
	return_stmt : RETURN . expr SEMI  (38)

	NOT  shift 28
	IDENT  shift 49
	INT_LIT  shift 30
	BOOL_LIT  shift 31
	LCIRCLE  shift 36
	.  error

	expr  goto 57


state 36
	expr : LCIRCLE . expr RCIRCLE  (60)

	NOT  shift 28
	IDENT  shift 49
	INT_LIT  shift 30
	BOOL_LIT  shift 31
	LCIRCLE  shift 36
	.  error

	expr  goto 58


state 37
	compound_stmt : LCURLY . $$4 local_decls stmt_list RCURLY  (32)
	$$4 : .  (31)

	.  reduce 31

	$$4  goto 59


state 38
	fun_decl : type_spec IDENT LCIRCLE params RCIRCLE $$1 LCURLY $$2 local_decls stmt_list RCURLY .  (11)

	.  reduce 11


state 39
	stmt : SEMI .  (25)

	.  reduce 25


state 40
	stmt : while_stmt .  (22)

	.  reduce 22


state 41
	stmt : compound_stmt .  (20)

	.  reduce 20


state 42
	stmt : if_stmt .  (21)

	.  reduce 21


state 43
	stmt : print_stmt .  (24)

	.  reduce 24


state 44
	stmt_list : stmt_list stmt .  (17)

	.  reduce 17


state 45
	stmt : return_stmt .  (23)

	.  reduce 23


state 46
	stmt : expr_stmt .  (19)

	.  reduce 19


state 47
	expr_stmt : expr . SEMI  (27)
	expr : expr . ADD expr  (46)
	expr : expr . SUB expr  (47)
	expr : expr . MUL expr  (48)
	expr : expr . DIV expr  (49)
	expr : expr . MOD expr  (50)
	expr : expr . OR expr  (51)
	expr : expr . AND expr  (52)
	expr : expr . EQ expr  (54)
	expr : expr . NE expr  (55)
	expr : expr . LE expr  (56)
	expr : expr . LT expr  (57)
	expr : expr . GE expr  (58)
	expr : expr . GT expr  (59)

	OR  shift 60
	AND  shift 61
	EQ  shift 62
	NE  shift 63
	LE  shift 64
	LT  shift 65
	GE  shift 66
	GT  shift 67
	ADD  shift 68
	SUB  shift 69
	MUL  shift 70
	DIV  shift 71
	MOD  shift 72
	SEMI  shift 73
	.  error


state 48
	local_decl : type_spec IDENT SEMI .  (41)

	.  reduce 41


state 49
	expr : IDENT .  (61)
	expr : IDENT . LCIRCLE args RCIRCLE  (62)
	expr : IDENT . LSQUARE expr RSQUARE  (63)

	LCIRCLE  shift 52
	LSQUARE  shift 74
	OR  reduce 61
	AND  reduce 61
	EQ  reduce 61
	NE  reduce 61
	LE  reduce 61
	LT  reduce 61
	GE  reduce 61
	GT  reduce 61
	ADD  reduce 61
	SUB  reduce 61
	MUL  reduce 61
	DIV  reduce 61
	MOD  reduce 61
	RCIRCLE  reduce 61
	RSQUARE  reduce 61
	SEMI  reduce 61
	COMMA  reduce 61


state 50
	expr : expr . ADD expr  (46)
	expr : expr . SUB expr  (47)
	expr : expr . MUL expr  (48)
	expr : expr . DIV expr  (49)
	expr : expr . MOD expr  (50)
	expr : expr . OR expr  (51)
	expr : expr . AND expr  (52)
	expr : NOT expr .  (53)
	expr : expr . EQ expr  (54)
	expr : expr . NE expr  (55)
	expr : expr . LE expr  (56)
	expr : expr . LT expr  (57)
	expr : expr . GE expr  (58)
	expr : expr . GT expr  (59)

	.  reduce 53


state 51
	expr_stmt : IDENT ASSIGN . expr_stmt  (26)

	NOT  shift 28
	IDENT  shift 29
	INT_LIT  shift 30
	BOOL_LIT  shift 31
	LCIRCLE  shift 36
	.  error

	expr_stmt  goto 75
	expr  goto 47


state 52
	expr : IDENT LCIRCLE . args RCIRCLE  (62)
	args : .  (45)

	NOT  shift 28
	IDENT  shift 49
	INT_LIT  shift 30
	BOOL_LIT  shift 31
	LCIRCLE  shift 36
	RCIRCLE  reduce 45

	args  goto 76
	arg_list  goto 77
	expr  goto 78


state 53
	expr_stmt : IDENT LSQUARE . expr RSQUARE ASSIGN expr_stmt  (28)
	expr : IDENT LSQUARE . expr RSQUARE  (63)

	NOT  shift 28
	IDENT  shift 49
	INT_LIT  shift 30
	BOOL_LIT  shift 31
	LCIRCLE  shift 36
	.  error

	expr  goto 79


state 54
	if_stmt : IF LCIRCLE . expr RCIRCLE $$5 LCURLY stmt_list RCURLY else_stmt  (34)

	NOT  shift 28
	IDENT  shift 49
	INT_LIT  shift 30
	BOOL_LIT  shift 31
	LCIRCLE  shift 36
	.  error

	expr  goto 80


state 55
	print_stmt : PRINT expr . SEMI  (37)
	expr : expr . ADD expr  (46)
	expr : expr . SUB expr  (47)
	expr : expr . MUL expr  (48)
	expr : expr . DIV expr  (49)
	expr : expr . MOD expr  (50)
	expr : expr . OR expr  (51)
	expr : expr . AND expr  (52)
	expr : expr . EQ expr  (54)
	expr : expr . NE expr  (55)
	expr : expr . LE expr  (56)
	expr : expr . LT expr  (57)
	expr : expr . GE expr  (58)
	expr : expr . GT expr  (59)

	OR  shift 60
	AND  shift 61
	EQ  shift 62
	NE  shift 63
	LE  shift 64
	LT  shift 65
	GE  shift 66
	GT  shift 67
	ADD  shift 68
	SUB  shift 69
	MUL  shift 70
	DIV  shift 71
	MOD  shift 72
	SEMI  shift 81
	.  error


state 56
	while_stmt : WHILE LCIRCLE . expr RCIRCLE $$3 stmt  (30)

	NOT  shift 28
	IDENT  shift 49
	INT_LIT  shift 30
	BOOL_LIT  shift 31
	LCIRCLE  shift 36
	.  error

	expr  goto 82


state 57
	return_stmt : RETURN expr . SEMI  (38)
	expr : expr . ADD expr  (46)
	expr : expr . SUB expr  (47)
	expr : expr . MUL expr  (48)
	expr : expr . DIV expr  (49)
	expr : expr . MOD expr  (50)
	expr : expr . OR expr  (51)
	expr : expr . AND expr  (52)
	expr : expr . EQ expr  (54)
	expr : expr . NE expr  (55)
	expr : expr . LE expr  (56)
	expr : expr . LT expr  (57)
	expr : expr . GE expr  (58)
	expr : expr . GT expr  (59)

	OR  shift 60
	AND  shift 61
	EQ  shift 62
	NE  shift 63
	LE  shift 64
	LT  shift 65
	GE  shift 66
	GT  shift 67
	ADD  shift 68
	SUB  shift 69
	MUL  shift 70
	DIV  shift 71
	MOD  shift 72
	SEMI  shift 83
	.  error


state 58
	expr : expr . ADD expr  (46)
	expr : expr . SUB expr  (47)
	expr : expr . MUL expr  (48)
	expr : expr . DIV expr  (49)
	expr : expr . MOD expr  (50)
	expr : expr . OR expr  (51)
	expr : expr . AND expr  (52)
	expr : expr . EQ expr  (54)
	expr : expr . NE expr  (55)
	expr : expr . LE expr  (56)
	expr : expr . LT expr  (57)
	expr : expr . GE expr  (58)
	expr : expr . GT expr  (59)
	expr : LCIRCLE expr . RCIRCLE  (60)

	OR  shift 60
	AND  shift 61
	EQ  shift 62
	NE  shift 63
	LE  shift 64
	LT  shift 65
	GE  shift 66
	GT  shift 67
	ADD  shift 68
	SUB  shift 69
	MUL  shift 70
	DIV  shift 71
	MOD  shift 72
	RCIRCLE  shift 84
	.  error


state 59
	compound_stmt : LCURLY $$4 . local_decls stmt_list RCURLY  (32)
	local_decls : .  (40)

	.  reduce 40

	local_decls  goto 85


state 60
	expr : expr OR . expr  (51)

	NOT  shift 28
	IDENT  shift 49
	INT_LIT  shift 30
	BOOL_LIT  shift 31
	LCIRCLE  shift 36
	.  error

	expr  goto 86


state 61
	expr : expr AND . expr  (52)

	NOT  shift 28
	IDENT  shift 49
	INT_LIT  shift 30
	BOOL_LIT  shift 31
	LCIRCLE  shift 36
	.  error

	expr  goto 87


state 62
	expr : expr EQ . expr  (54)

	NOT  shift 28
	IDENT  shift 49
	INT_LIT  shift 30
	BOOL_LIT  shift 31
	LCIRCLE  shift 36
	.  error

	expr  goto 88


state 63
	expr : expr NE . expr  (55)

	NOT  shift 28
	IDENT  shift 49
	INT_LIT  shift 30
	BOOL_LIT  shift 31
	LCIRCLE  shift 36
	.  error

	expr  goto 89


state 64
	expr : expr LE . expr  (56)

	NOT  shift 28
	IDENT  shift 49
	INT_LIT  shift 30
	BOOL_LIT  shift 31
	LCIRCLE  shift 36
	.  error

	expr  goto 90


state 65
	expr : expr LT . expr  (57)

	NOT  shift 28
	IDENT  shift 49
	INT_LIT  shift 30
	BOOL_LIT  shift 31
	LCIRCLE  shift 36
	.  error

	expr  goto 91


state 66
	expr : expr GE . expr  (58)

	NOT  shift 28
	IDENT  shift 49
	INT_LIT  shift 30
	BOOL_LIT  shift 31
	LCIRCLE  shift 36
	.  error

	expr  goto 92


state 67
	expr : expr GT . expr  (59)

	NOT  shift 28
	IDENT  shift 49
	INT_LIT  shift 30
	BOOL_LIT  shift 31
	LCIRCLE  shift 36
	.  error

	expr  goto 93


state 68
	expr : expr ADD . expr  (46)

	NOT  shift 28
	IDENT  shift 49
	INT_LIT  shift 30
	BOOL_LIT  shift 31
	LCIRCLE  shift 36
	.  error

	expr  goto 94


state 69
	expr : expr SUB . expr  (47)

	NOT  shift 28
	IDENT  shift 49
	INT_LIT  shift 30
	BOOL_LIT  shift 31
	LCIRCLE  shift 36
	.  error

	expr  goto 95


state 70
	expr : expr MUL . expr  (48)

	NOT  shift 28
	IDENT  shift 49
	INT_LIT  shift 30
	BOOL_LIT  shift 31
	LCIRCLE  shift 36
	.  error

	expr  goto 96


state 71
	expr : expr DIV . expr  (49)

	NOT  shift 28
	IDENT  shift 49
	INT_LIT  shift 30
	BOOL_LIT  shift 31
	LCIRCLE  shift 36
	.  error

	expr  goto 97


state 72
	expr : expr MOD . expr  (50)

	NOT  shift 28
	IDENT  shift 49
	INT_LIT  shift 30
	BOOL_LIT  shift 31
	LCIRCLE  shift 36
	.  error

	expr  goto 98


state 73
	expr_stmt : expr SEMI .  (27)

	.  reduce 27


state 74
	expr : IDENT LSQUARE . expr RSQUARE  (63)

	NOT  shift 28
	IDENT  shift 49
	INT_LIT  shift 30
	BOOL_LIT  shift 31
	LCIRCLE  shift 36
	.  error

	expr  goto 99


state 75
	expr_stmt : IDENT ASSIGN expr_stmt .  (26)

	.  reduce 26


state 76
	expr : IDENT LCIRCLE args . RCIRCLE  (62)

	RCIRCLE  shift 100
	.  error


state 77
	arg_list : arg_list . COMMA expr  (42)
	args : arg_list .  (44)

	COMMA  shift 101
	RCIRCLE  reduce 44


state 78
	arg_list : expr .  (43)
	expr : expr . ADD expr  (46)
	expr : expr . SUB expr  (47)
	expr : expr . MUL expr  (48)
	expr : expr . DIV expr  (49)
	expr : expr . MOD expr  (50)
	expr : expr . OR expr  (51)
	expr : expr . AND expr  (52)
	expr : expr . EQ expr  (54)
	expr : expr . NE expr  (55)
	expr : expr . LE expr  (56)
	expr : expr . LT expr  (57)
	expr : expr . GE expr  (58)
	expr : expr . GT expr  (59)

	OR  shift 60
	AND  shift 61
	EQ  shift 62
	NE  shift 63
	LE  shift 64
	LT  shift 65
	GE  shift 66
	GT  shift 67
	ADD  shift 68
	SUB  shift 69
	MUL  shift 70
	DIV  shift 71
	MOD  shift 72
	RCIRCLE  reduce 43
	COMMA  reduce 43


state 79
	expr_stmt : IDENT LSQUARE expr . RSQUARE ASSIGN expr_stmt  (28)
	expr : expr . ADD expr  (46)
	expr : expr . SUB expr  (47)
	expr : expr . MUL expr  (48)
	expr : expr . DIV expr  (49)
	expr : expr . MOD expr  (50)
	expr : expr . OR expr  (51)
	expr : expr . AND expr  (52)
	expr : expr . EQ expr  (54)
	expr : expr . NE expr  (55)
	expr : expr . LE expr  (56)
	expr : expr . LT expr  (57)
	expr : expr . GE expr  (58)
	expr : expr . GT expr  (59)
	expr : IDENT LSQUARE expr . RSQUARE  (63)

	OR  shift 60
	AND  shift 61
	EQ  shift 62
	NE  shift 63
	LE  shift 64
	LT  shift 65
	GE  shift 66
	GT  shift 67
	ADD  shift 68
	SUB  shift 69
	MUL  shift 70
	DIV  shift 71
	MOD  shift 72
	RSQUARE  shift 102
	.  error


state 80
	if_stmt : IF LCIRCLE expr . RCIRCLE $$5 LCURLY stmt_list RCURLY else_stmt  (34)
	expr : expr . ADD expr  (46)
	expr : expr . SUB expr  (47)
	expr : expr . MUL expr  (48)
	expr : expr . DIV expr  (49)
	expr : expr . MOD expr  (50)
	expr : expr . OR expr  (51)
	expr : expr . AND expr  (52)
	expr : expr . EQ expr  (54)
	expr : expr . NE expr  (55)
	expr : expr . LE expr  (56)
	expr : expr . LT expr  (57)
	expr : expr . GE expr  (58)
	expr : expr . GT expr  (59)

	OR  shift 60
	AND  shift 61
	EQ  shift 62
	NE  shift 63
	LE  shift 64
	LT  shift 65
	GE  shift 66
	GT  shift 67
	ADD  shift 68
	SUB  shift 69
	MUL  shift 70
	DIV  shift 71
	MOD  shift 72
	RCIRCLE  shift 103
	.  error


state 81
	print_stmt : PRINT expr SEMI .  (37)

	.  reduce 37


state 82
	while_stmt : WHILE LCIRCLE expr . RCIRCLE $$3 stmt  (30)
	expr : expr . ADD expr  (46)
	expr : expr . SUB expr  (47)
	expr : expr . MUL expr  (48)
	expr : expr . DIV expr  (49)
	expr : expr . MOD expr  (50)
	expr : expr . OR expr  (51)
	expr : expr . AND expr  (52)
	expr : expr . EQ expr  (54)
	expr : expr . NE expr  (55)
	expr : expr . LE expr  (56)
	expr : expr . LT expr  (57)
	expr : expr . GE expr  (58)
	expr : expr . GT expr  (59)

	OR  shift 60
	AND  shift 61
	EQ  shift 62
	NE  shift 63
	LE  shift 64
	LT  shift 65
	GE  shift 66
	GT  shift 67
	ADD  shift 68
	SUB  shift 69
	MUL  shift 70
	DIV  shift 71
	MOD  shift 72
	RCIRCLE  shift 104
	.  error


state 83
	return_stmt : RETURN expr SEMI .  (38)

	.  reduce 38


state 84
	expr : LCIRCLE expr RCIRCLE .  (60)

	.  reduce 60


state 85
	compound_stmt : LCURLY $$4 local_decls . stmt_list RCURLY  (32)
	local_decls : local_decls . local_decl  (39)
	stmt_list : .  (18)

	BOOL  shift 3
	INT  shift 4
	NOT  reduce 18
	IDENT  reduce 18
	INT_LIT  reduce 18
	BOOL_LIT  reduce 18
	IF  reduce 18
	PRINT  reduce 18
	WHILE  reduce 18
	RETURN  reduce 18
	LCIRCLE  reduce 18
	LCURLY  reduce 18
	RCURLY  reduce 18
	SEMI  reduce 18

	type_spec  goto 24
	local_decl  goto 25
	stmt_list  goto 105


state 86
	expr : expr . ADD expr  (46)
	expr : expr . SUB expr  (47)
	expr : expr . MUL expr  (48)
	expr : expr . DIV expr  (49)
	expr : expr . MOD expr  (50)
	expr : expr . OR expr  (51)
	expr : expr OR expr .  (51)
	expr : expr . AND expr  (52)
	expr : expr . EQ expr  (54)
	expr : expr . NE expr  (55)
	expr : expr . LE expr  (56)
	expr : expr . LT expr  (57)
	expr : expr . GE expr  (58)
	expr : expr . GT expr  (59)

	AND  shift 61
	EQ  shift 62
	NE  shift 63
	LE  shift 64
	LT  shift 65
	GE  shift 66
	GT  shift 67
	ADD  shift 68
	SUB  shift 69
	MUL  shift 70
	DIV  shift 71
	MOD  shift 72
	OR  reduce 51
	RCIRCLE  reduce 51
	RSQUARE  reduce 51
	SEMI  reduce 51
	COMMA  reduce 51


state 87
	expr : expr . ADD expr  (46)
	expr : expr . SUB expr  (47)
	expr : expr . MUL expr  (48)
	expr : expr . DIV expr  (49)
	expr : expr . MOD expr  (50)
	expr : expr . OR expr  (51)
	expr : expr . AND expr  (52)
	expr : expr AND expr .  (52)
	expr : expr . EQ expr  (54)
	expr : expr . NE expr  (55)
	expr : expr . LE expr  (56)
	expr : expr . LT expr  (57)
	expr : expr . GE expr  (58)
	expr : expr . GT expr  (59)

	EQ  shift 62
	NE  shift 63
	LE  shift 64
	LT  shift 65
	GE  shift 66
	GT  shift 67
	ADD  shift 68
	SUB  shift 69
	MUL  shift 70
	DIV  shift 71
	MOD  shift 72
	OR  reduce 52
	AND  reduce 52
	RCIRCLE  reduce 52
	RSQUARE  reduce 52
	SEMI  reduce 52
	COMMA  reduce 52


state 88
	expr : expr . ADD expr  (46)
	expr : expr . SUB expr  (47)
	expr : expr . MUL expr  (48)
	expr : expr . DIV expr  (49)
	expr : expr . MOD expr  (50)
	expr : expr . OR expr  (51)
	expr : expr . AND expr  (52)
	expr : expr . EQ expr  (54)
	expr : expr EQ expr .  (54)
	expr : expr . NE expr  (55)
	expr : expr . LE expr  (56)
	expr : expr . LT expr  (57)
	expr : expr . GE expr  (58)
	expr : expr . GT expr  (59)

	LE  shift 64
	LT  shift 65
	GE  shift 66
	GT  shift 67
	ADD  shift 68
	SUB  shift 69
	MUL  shift 70
	DIV  shift 71
	MOD  shift 72
	OR  reduce 54
	AND  reduce 54
	EQ  reduce 54
	NE  reduce 54
	RCIRCLE  reduce 54
	RSQUARE  reduce 54
	SEMI  reduce 54
	COMMA  reduce 54


state 89
	expr : expr . ADD expr  (46)
	expr : expr . SUB expr  (47)
	expr : expr . MUL expr  (48)
	expr : expr . DIV expr  (49)
	expr : expr . MOD expr  (50)
	expr : expr . OR expr  (51)
	expr : expr . AND expr  (52)
	expr : expr . EQ expr  (54)
	expr : expr . NE expr  (55)
	expr : expr NE expr .  (55)
	expr : expr . LE expr  (56)
	expr : expr . LT expr  (57)
	expr : expr . GE expr  (58)
	expr : expr . GT expr  (59)

	LE  shift 64
	LT  shift 65
	GE  shift 66
	GT  shift 67
	ADD  shift 68
	SUB  shift 69
	MUL  shift 70
	DIV  shift 71
	MOD  shift 72
	OR  reduce 55
	AND  reduce 55
	EQ  reduce 55
	NE  reduce 55
	RCIRCLE  reduce 55
	RSQUARE  reduce 55
	SEMI  reduce 55
	COMMA  reduce 55


state 90
	expr : expr . ADD expr  (46)
	expr : expr . SUB expr  (47)
	expr : expr . MUL expr  (48)
	expr : expr . DIV expr  (49)
	expr : expr . MOD expr  (50)
	expr : expr . OR expr  (51)
	expr : expr . AND expr  (52)
	expr : expr . EQ expr  (54)
	expr : expr . NE expr  (55)
	expr : expr . LE expr  (56)
	expr : expr LE expr .  (56)
	expr : expr . LT expr  (57)
	expr : expr . GE expr  (58)
	expr : expr . GT expr  (59)

	ADD  shift 68
	SUB  shift 69
	MUL  shift 70
	DIV  shift 71
	MOD  shift 72
	OR  reduce 56
	AND  reduce 56
	EQ  reduce 56
	NE  reduce 56
	LE  reduce 56
	LT  reduce 56
	GE  reduce 56
	GT  reduce 56
	RCIRCLE  reduce 56
	RSQUARE  reduce 56
	SEMI  reduce 56
	COMMA  reduce 56


state 91
	expr : expr . ADD expr  (46)
	expr : expr . SUB expr  (47)
	expr : expr . MUL expr  (48)
	expr : expr . DIV expr  (49)
	expr : expr . MOD expr  (50)
	expr : expr . OR expr  (51)
	expr : expr . AND expr  (52)
	expr : expr . EQ expr  (54)
	expr : expr . NE expr  (55)
	expr : expr . LE expr  (56)
	expr : expr . LT expr  (57)
	expr : expr LT expr .  (57)
	expr : expr . GE expr  (58)
	expr : expr . GT expr  (59)

	ADD  shift 68
	SUB  shift 69
	MUL  shift 70
	DIV  shift 71
	MOD  shift 72
	OR  reduce 57
	AND  reduce 57
	EQ  reduce 57
	NE  reduce 57
	LE  reduce 57
	LT  reduce 57
	GE  reduce 57
	GT  reduce 57
	RCIRCLE  reduce 57
	RSQUARE  reduce 57
	SEMI  reduce 57
	COMMA  reduce 57


state 92
	expr : expr . ADD expr  (46)
	expr : expr . SUB expr  (47)
	expr : expr . MUL expr  (48)
	expr : expr . DIV expr  (49)
	expr : expr . MOD expr  (50)
	expr : expr . OR expr  (51)
	expr : expr . AND expr  (52)
	expr : expr . EQ expr  (54)
	expr : expr . NE expr  (55)
	expr : expr . LE expr  (56)
	expr : expr . LT expr  (57)
	expr : expr . GE expr  (58)
	expr : expr GE expr .  (58)
	expr : expr . GT expr  (59)

	ADD  shift 68
	SUB  shift 69
	MUL  shift 70
	DIV  shift 71
	MOD  shift 72
	OR  reduce 58
	AND  reduce 58
	EQ  reduce 58
	NE  reduce 58
	LE  reduce 58
	LT  reduce 58
	GE  reduce 58
	GT  reduce 58
	RCIRCLE  reduce 58
	RSQUARE  reduce 58
	SEMI  reduce 58
	COMMA  reduce 58


state 93
	expr : expr . ADD expr  (46)
	expr : expr . SUB expr  (47)
	expr : expr . MUL expr  (48)
	expr : expr . DIV expr  (49)
	expr : expr . MOD expr  (50)
	expr : expr . OR expr  (51)
	expr : expr . AND expr  (52)
	expr : expr . EQ expr  (54)
	expr : expr . NE expr  (55)
	expr : expr . LE expr  (56)
	expr : expr . LT expr  (57)
	expr : expr . GE expr  (58)
	expr : expr . GT expr  (59)
	expr : expr GT expr .  (59)

	ADD  shift 68
	SUB  shift 69
	MUL  shift 70
	DIV  shift 71
	MOD  shift 72
	OR  reduce 59
	AND  reduce 59
	EQ  reduce 59
	NE  reduce 59
	LE  reduce 59
	LT  reduce 59
	GE  reduce 59
	GT  reduce 59
	RCIRCLE  reduce 59
	RSQUARE  reduce 59
	SEMI  reduce 59
	COMMA  reduce 59


state 94
	expr : expr . ADD expr  (46)
	expr : expr ADD expr .  (46)
	expr : expr . SUB expr  (47)
	expr : expr . MUL expr  (48)
	expr : expr . DIV expr  (49)
	expr : expr . MOD expr  (50)
	expr : expr . OR expr  (51)
	expr : expr . AND expr  (52)
	expr : expr . EQ expr  (54)
	expr : expr . NE expr  (55)
	expr : expr . LE expr  (56)
	expr : expr . LT expr  (57)
	expr : expr . GE expr  (58)
	expr : expr . GT expr  (59)

	MUL  shift 70
	DIV  shift 71
	MOD  shift 72
	OR  reduce 46
	AND  reduce 46
	EQ  reduce 46
	NE  reduce 46
	LE  reduce 46
	LT  reduce 46
	GE  reduce 46
	GT  reduce 46
	ADD  reduce 46
	SUB  reduce 46
	RCIRCLE  reduce 46
	RSQUARE  reduce 46
	SEMI  reduce 46
	COMMA  reduce 46


state 95
	expr : expr . ADD expr  (46)
	expr : expr . SUB expr  (47)
	expr : expr SUB expr .  (47)
	expr : expr . MUL expr  (48)
	expr : expr . DIV expr  (49)
	expr : expr . MOD expr  (50)
	expr : expr . OR expr  (51)
	expr : expr . AND expr  (52)
	expr : expr . EQ expr  (54)
	expr : expr . NE expr  (55)
	expr : expr . LE expr  (56)
	expr : expr . LT expr  (57)
	expr : expr . GE expr  (58)
	expr : expr . GT expr  (59)

	MUL  shift 70
	DIV  shift 71
	MOD  shift 72
	OR  reduce 47
	AND  reduce 47
	EQ  reduce 47
	NE  reduce 47
	LE  reduce 47
	LT  reduce 47
	GE  reduce 47
	GT  reduce 47
	ADD  reduce 47
	SUB  reduce 47
	RCIRCLE  reduce 47
	RSQUARE  reduce 47
	SEMI  reduce 47
	COMMA  reduce 47


state 96
	expr : expr . ADD expr  (46)
	expr : expr . SUB expr  (47)
	expr : expr . MUL expr  (48)
	expr : expr MUL expr .  (48)
	expr : expr . DIV expr  (49)
	expr : expr . MOD expr  (50)
	expr : expr . OR expr  (51)
	expr : expr . AND expr  (52)
	expr : expr . EQ expr  (54)
	expr : expr . NE expr  (55)
	expr : expr . LE expr  (56)
	expr : expr . LT expr  (57)
	expr : expr . GE expr  (58)
	expr : expr . GT expr  (59)

	.  reduce 48


state 97
	expr : expr . ADD expr  (46)
	expr : expr . SUB expr  (47)
	expr : expr . MUL expr  (48)
	expr : expr . DIV expr  (49)
	expr : expr DIV expr .  (49)
	expr : expr . MOD expr  (50)
	expr : expr . OR expr  (51)
	expr : expr . AND expr  (52)
	expr : expr . EQ expr  (54)
	expr : expr . NE expr  (55)
	expr : expr . LE expr  (56)
	expr : expr . LT expr  (57)
	expr : expr . GE expr  (58)
	expr : expr . GT expr  (59)

	.  reduce 49


state 98
	expr : expr . ADD expr  (46)
	expr : expr . SUB expr  (47)
	expr : expr . MUL expr  (48)
	expr : expr . DIV expr  (49)
	expr : expr . MOD expr  (50)
	expr : expr MOD expr .  (50)
	expr : expr . OR expr  (51)
	expr : expr . AND expr  (52)
	expr : expr . EQ expr  (54)
	expr : expr . NE expr  (55)
	expr : expr . LE expr  (56)
	expr : expr . LT expr  (57)
	expr : expr . GE expr  (58)
	expr : expr . GT expr  (59)

	.  reduce 50


state 99
	expr : expr . ADD expr  (46)
	expr : expr . SUB expr  (47)
	expr : expr . MUL expr  (48)
	expr : expr . DIV expr  (49)
	expr : expr . MOD expr  (50)
	expr : expr . OR expr  (51)
	expr : expr . AND expr  (52)
	expr : expr . EQ expr  (54)
	expr : expr . NE expr  (55)
	expr : expr . LE expr  (56)
	expr : expr . LT expr  (57)
	expr : expr . GE expr  (58)
	expr : expr . GT expr  (59)
	expr : IDENT LSQUARE expr . RSQUARE  (63)

	OR  shift 60
	AND  shift 61
	EQ  shift 62
	NE  shift 63
	LE  shift 64
	LT  shift 65
	GE  shift 66
	GT  shift 67
	ADD  shift 68
	SUB  shift 69
	MUL  shift 70
	DIV  shift 71
	MOD  shift 72
	RSQUARE  shift 106
	.  error


state 100
	expr : IDENT LCIRCLE args RCIRCLE .  (62)

	.  reduce 62


state 101
	arg_list : arg_list COMMA . expr  (42)

	NOT  shift 28
	IDENT  shift 49
	INT_LIT  shift 30
	BOOL_LIT  shift 31
	LCIRCLE  shift 36
	.  error

	expr  goto 107


state 102
	expr_stmt : IDENT LSQUARE expr RSQUARE . ASSIGN expr_stmt  (28)
	expr : IDENT LSQUARE expr RSQUARE .  (63)

	ASSIGN  shift 108
	OR  reduce 63
	AND  reduce 63
	EQ  reduce 63
	NE  reduce 63
	LE  reduce 63
	LT  reduce 63
	GE  reduce 63
	GT  reduce 63
	ADD  reduce 63
	SUB  reduce 63
	MUL  reduce 63
	DIV  reduce 63
	MOD  reduce 63
	SEMI  reduce 63


state 103
	if_stmt : IF LCIRCLE expr RCIRCLE . $$5 LCURLY stmt_list RCURLY else_stmt  (34)
	$$5 : .  (33)

	.  reduce 33

	$$5  goto 109


state 104
	while_stmt : WHILE LCIRCLE expr RCIRCLE . $$3 stmt  (30)
	$$3 : .  (29)

	.  reduce 29

	$$3  goto 110


state 105
	stmt_list : stmt_list . stmt  (17)
	compound_stmt : LCURLY $$4 local_decls stmt_list . RCURLY  (32)

	NOT  shift 28
	IDENT  shift 29
	INT_LIT  shift 30
	BOOL_LIT  shift 31
	IF  shift 32
	PRINT  shift 33
	WHILE  shift 34
	RETURN  shift 35
	LCIRCLE  shift 36
	LCURLY  shift 37
	RCURLY  shift 111
	SEMI  shift 39
	.  error

	while_stmt  goto 40
	compound_stmt  goto 41
	if_stmt  goto 42
	print_stmt  goto 43
	stmt  goto 44
	return_stmt  goto 45
	expr_stmt  goto 46
	expr  goto 47


state 106
	expr : IDENT LSQUARE expr RSQUARE .  (63)

	.  reduce 63


state 107
	arg_list : arg_list COMMA expr .  (42)
	expr : expr . ADD expr  (46)
	expr : expr . SUB expr  (47)
	expr : expr . MUL expr  (48)
	expr : expr . DIV expr  (49)
	expr : expr . MOD expr  (50)
	expr : expr . OR expr  (51)
	expr : expr . AND expr  (52)
	expr : expr . EQ expr  (54)
	expr : expr . NE expr  (55)
	expr : expr . LE expr  (56)
	expr : expr . LT expr  (57)
	expr : expr . GE expr  (58)
	expr : expr . GT expr  (59)

	OR  shift 60
	AND  shift 61
	EQ  shift 62
	NE  shift 63
	LE  shift 64
	LT  shift 65
	GE  shift 66
	GT  shift 67
	ADD  shift 68
	SUB  shift 69
	MUL  shift 70
	DIV  shift 71
	MOD  shift 72
	RCIRCLE  reduce 42
	COMMA  reduce 42


state 108
	expr_stmt : IDENT LSQUARE expr RSQUARE ASSIGN . expr_stmt  (28)

	NOT  shift 28
	IDENT  shift 29
	INT_LIT  shift 30
	BOOL_LIT  shift 31
	LCIRCLE  shift 36
	.  error

	expr_stmt  goto 112
	expr  goto 47


state 109
	if_stmt : IF LCIRCLE expr RCIRCLE $$5 . LCURLY stmt_list RCURLY else_stmt  (34)

	LCURLY  shift 113
	.  error


state 110
	while_stmt : WHILE LCIRCLE expr RCIRCLE $$3 . stmt  (30)

	NOT  shift 28
	IDENT  shift 29
	INT_LIT  shift 30
	BOOL_LIT  shift 31
	IF  shift 32
	PRINT  shift 33
	WHILE  shift 34
	RETURN  shift 35
	LCIRCLE  shift 36
	LCURLY  shift 37
	SEMI  shift 39
	.  error

	while_stmt  goto 40
	compound_stmt  goto 41
	if_stmt  goto 42
	print_stmt  goto 43
	stmt  goto 114
	return_stmt  goto 45
	expr_stmt  goto 46
	expr  goto 47


state 111
	compound_stmt : LCURLY $$4 local_decls stmt_list RCURLY .  (32)

	.  reduce 32


state 112
	expr_stmt : IDENT LSQUARE expr RSQUARE ASSIGN expr_stmt .  (28)

	.  reduce 28


state 113
	if_stmt : IF LCIRCLE expr RCIRCLE $$5 LCURLY . stmt_list RCURLY else_stmt  (34)
	stmt_list : .  (18)

	.  reduce 18

	stmt_list  goto 115


state 114
	while_stmt : WHILE LCIRCLE expr RCIRCLE $$3 stmt .  (30)

	.  reduce 30


state 115
	stmt_list : stmt_list . stmt  (17)
	if_stmt : IF LCIRCLE expr RCIRCLE $$5 LCURLY stmt_list . RCURLY else_stmt  (34)

	NOT  shift 28
	IDENT  shift 29
	INT_LIT  shift 30
	BOOL_LIT  shift 31
	IF  shift 32
	PRINT  shift 33
	WHILE  shift 34
	RETURN  shift 35
	LCIRCLE  shift 36
	LCURLY  shift 37
	RCURLY  shift 116
	SEMI  shift 39
	.  error

	while_stmt  goto 40
	compound_stmt  goto 41
	if_stmt  goto 42
	print_stmt  goto 43
	stmt  goto 44
	return_stmt  goto 45
	expr_stmt  goto 46
	expr  goto 47


state 116
	if_stmt : IF LCIRCLE expr RCIRCLE $$5 LCURLY stmt_list RCURLY . else_stmt  (34)
	else_stmt : .  (36)

	ELSE  shift 117
	NOT  reduce 36
	IDENT  reduce 36
	INT_LIT  reduce 36
	BOOL_LIT  reduce 36
	IF  reduce 36
	PRINT  reduce 36
	WHILE  reduce 36
	RETURN  reduce 36
	LCIRCLE  reduce 36
	LCURLY  reduce 36
	RCURLY  reduce 36
	SEMI  reduce 36

	else_stmt  goto 118


state 117
	else_stmt : ELSE . LCURLY stmt_list RCURLY  (35)

	LCURLY  shift 119
	.  error


state 118
	if_stmt : IF LCIRCLE expr RCIRCLE $$5 LCURLY stmt_list RCURLY else_stmt .  (34)

	.  reduce 34


state 119
	else_stmt : ELSE LCURLY . stmt_list RCURLY  (35)
	stmt_list : .  (18)

	.  reduce 18

	stmt_list  goto 120


state 120
	stmt_list : stmt_list . stmt  (17)
	else_stmt : ELSE LCURLY stmt_list . RCURLY  (35)

	NOT  shift 28
	IDENT  shift 29
	INT_LIT  shift 30
	BOOL_LIT  shift 31
	IF  shift 32
	PRINT  shift 33
	WHILE  shift 34
	RETURN  shift 35
	LCIRCLE  shift 36
	LCURLY  shift 37
	RCURLY  shift 121
	SEMI  shift 39
	.  error

	while_stmt  goto 40
	compound_stmt  goto 41
	if_stmt  goto 42
	print_stmt  goto 43
	stmt  goto 44
	return_stmt  goto 45
	expr_stmt  goto 46
	expr  goto 47


state 121
	else_stmt : ELSE LCURLY stmt_list RCURLY .  (35)

	.  reduce 35


35 terminals, 29 nonterminals
66 grammar rules, 122 states
