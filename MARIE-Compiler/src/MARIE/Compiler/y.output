   0  $accept : program $end

   1  program : decl_list

   2  decl_list : decl_list decl
   3            |

   4  decl : var_decl
   5       | fun_decl

   6  $$1 :

   7  var_decl : type_spec IDENT $$1 SEMI

   8  type_spec : BOOL
   9            | INT

  10  $$2 :

  11  type_spec : type_spec LSQUARE $$2 INT_LIT RSQUARE

  12  $$3 :

  13  $$4 :

  14  fun_decl : type_spec IDENT $$3 LCIRCLE params RCIRCLE $$4 LCURLY local_decls stmt_list RCURLY

  15  params : param_list
  16         |

  17  param_list : param_list COMMA param
  18             | param

  19  param : type_spec IDENT

  20  stmt_list : stmt_list stmt
  21            |

  22  stmt : expr_stmt
  23       | compound_stmt
  24       | if_stmt
  25       | while_stmt
  26       | return_stmt
  27       | print_stmt
  28       | SEMI

  29  $$5 :

  30  expr_stmt : IDENT $$5 ASSIGN expr_stmt
  31            | expr SEMI

  32  $$6 :

  33  $$7 :

  34  while_stmt : WHILE $$6 LCIRCLE expr $$7 RCIRCLE stmt

  35  compound_stmt : LCURLY local_decls stmt_list RCURLY

  36  $$8 :

  37  $$9 :

  38  if_stmt : $$8 IF LCIRCLE expr $$9 RCIRCLE LCURLY stmt RCURLY else_stmt

  39  else_stmt : ELSE LCURLY stmt RCURLY
  40            |

  41  $$10 :

  42  print_stmt : PRINT expr $$10 SEMI

  43  return_stmt : RETURN expr SEMI

  44  local_decls : local_decls local_decl
  45              |

  46  $$11 :

  47  local_decl : type_spec IDENT $$11 SEMI

  48  arg_list : arg_list COMMA expr
  49           | expr

  50  args : arg_list
  51       |

  52  expr : expr ADD expr
  53       | expr SUB expr
  54       | expr MUL expr
  55       | expr DIV expr
  56       | expr MOD expr
  57       | expr OR expr
  58       | expr AND expr
  59       | NOT expr
  60       | expr EQ expr
  61       | expr NE expr
  62       | expr LE expr
  63       | expr LT expr
  64       | expr GE expr
  65       | expr GT expr
  66       | LCIRCLE expr RCIRCLE

  67  $$12 :

  68  expr : IDENT $$12

  69  $$13 :

  70  expr : IDENT $$13 LCIRCLE args RCIRCLE

  71  $$14 :

  72  expr : IDENT $$14 LSQUARE expr RSQUARE

  73  $$15 :

  74  expr : $$15 BOOL_LIT

  75  $$16 :

  76  expr : $$16 INT_LIT

state 0
	$accept : . program $end  (0)
	decl_list : .  (3)

	.  reduce 3

	program  goto 1
	decl_list  goto 2


state 1
	$accept : program . $end  (0)

	$end  accept


state 2
	program : decl_list .  (1)
	decl_list : decl_list . decl  (2)

	BOOL  shift 3
	INT  shift 4
	$end  reduce 1

	decl  goto 5
	var_decl  goto 6
	fun_decl  goto 7
	type_spec  goto 8


state 3
	type_spec : BOOL .  (8)

	.  reduce 8


state 4
	type_spec : INT .  (9)

	.  reduce 9


state 5
	decl_list : decl_list decl .  (2)

	.  reduce 2


state 6
	decl : var_decl .  (4)

	.  reduce 4


state 7
	decl : fun_decl .  (5)

	.  reduce 5


state 8
	var_decl : type_spec . IDENT $$1 SEMI  (7)
	type_spec : type_spec . LSQUARE $$2 INT_LIT RSQUARE  (11)
	fun_decl : type_spec . IDENT $$3 LCIRCLE params RCIRCLE $$4 LCURLY local_decls stmt_list RCURLY  (14)

	IDENT  shift 9
	LSQUARE  shift 10
	.  error


state 9
	var_decl : type_spec IDENT . $$1 SEMI  (7)
	fun_decl : type_spec IDENT . $$3 LCIRCLE params RCIRCLE $$4 LCURLY local_decls stmt_list RCURLY  (14)
	$$1 : .  (6)
	$$3 : .  (12)

	LCIRCLE  reduce 12
	SEMI  reduce 6

	$$1  goto 11
	$$3  goto 12


state 10
	type_spec : type_spec LSQUARE . $$2 INT_LIT RSQUARE  (11)
	$$2 : .  (10)

	.  reduce 10

	$$2  goto 13


state 11
	var_decl : type_spec IDENT $$1 . SEMI  (7)

	SEMI  shift 14
	.  error


state 12
	fun_decl : type_spec IDENT $$3 . LCIRCLE params RCIRCLE $$4 LCURLY local_decls stmt_list RCURLY  (14)

	LCIRCLE  shift 15
	.  error


state 13
	type_spec : type_spec LSQUARE $$2 . INT_LIT RSQUARE  (11)

	INT_LIT  shift 16
	.  error


state 14
	var_decl : type_spec IDENT $$1 SEMI .  (7)

	.  reduce 7


state 15
	fun_decl : type_spec IDENT $$3 LCIRCLE . params RCIRCLE $$4 LCURLY local_decls stmt_list RCURLY  (14)
	params : .  (16)

	BOOL  shift 3
	INT  shift 4
	RCIRCLE  reduce 16

	type_spec  goto 17
	params  goto 18
	param_list  goto 19
	param  goto 20


state 16
	type_spec : type_spec LSQUARE $$2 INT_LIT . RSQUARE  (11)

	RSQUARE  shift 21
	.  error


state 17
	type_spec : type_spec . LSQUARE $$2 INT_LIT RSQUARE  (11)
	param : type_spec . IDENT  (19)

	IDENT  shift 22
	LSQUARE  shift 10
	.  error


state 18
	fun_decl : type_spec IDENT $$3 LCIRCLE params . RCIRCLE $$4 LCURLY local_decls stmt_list RCURLY  (14)

	RCIRCLE  shift 23
	.  error


state 19
	params : param_list .  (15)
	param_list : param_list . COMMA param  (17)

	COMMA  shift 24
	RCIRCLE  reduce 15


state 20
	param_list : param .  (18)

	.  reduce 18


state 21
	type_spec : type_spec LSQUARE $$2 INT_LIT RSQUARE .  (11)

	.  reduce 11


state 22
	param : type_spec IDENT .  (19)

	.  reduce 19


state 23
	fun_decl : type_spec IDENT $$3 LCIRCLE params RCIRCLE . $$4 LCURLY local_decls stmt_list RCURLY  (14)
	$$4 : .  (13)

	.  reduce 13

	$$4  goto 25


state 24
	param_list : param_list COMMA . param  (17)

	BOOL  shift 3
	INT  shift 4
	.  error

	type_spec  goto 17
	param  goto 26


state 25
	fun_decl : type_spec IDENT $$3 LCIRCLE params RCIRCLE $$4 . LCURLY local_decls stmt_list RCURLY  (14)

	LCURLY  shift 27
	.  error


state 26
	param_list : param_list COMMA param .  (17)

	.  reduce 17


state 27
	fun_decl : type_spec IDENT $$3 LCIRCLE params RCIRCLE $$4 LCURLY . local_decls stmt_list RCURLY  (14)
	local_decls : .  (45)

	.  reduce 45

	local_decls  goto 28


state 28
	fun_decl : type_spec IDENT $$3 LCIRCLE params RCIRCLE $$4 LCURLY local_decls . stmt_list RCURLY  (14)
	local_decls : local_decls . local_decl  (44)
	stmt_list : .  (21)

	BOOL  shift 3
	INT  shift 4
	NOT  reduce 21
	IDENT  reduce 21
	INT_LIT  reduce 21
	BOOL_LIT  reduce 21
	IF  reduce 21
	PRINT  reduce 21
	WHILE  reduce 21
	RETURN  reduce 21
	LCIRCLE  reduce 21
	LCURLY  reduce 21
	RCURLY  reduce 21
	SEMI  reduce 21

	type_spec  goto 29
	local_decl  goto 30
	stmt_list  goto 31


state 29
	type_spec : type_spec . LSQUARE $$2 INT_LIT RSQUARE  (11)
	local_decl : type_spec . IDENT $$11 SEMI  (47)

	IDENT  shift 32
	LSQUARE  shift 10
	.  error


state 30
	local_decls : local_decls local_decl .  (44)

	.  reduce 44


state 31
	fun_decl : type_spec IDENT $$3 LCIRCLE params RCIRCLE $$4 LCURLY local_decls stmt_list . RCURLY  (14)
	stmt_list : stmt_list . stmt  (20)
	$$8 : .  (36)
	$$15 : .  (73)
	$$16 : .  (75)

	NOT  shift 33
	IDENT  shift 34
	PRINT  shift 35
	WHILE  shift 36
	RETURN  shift 37
	LCIRCLE  shift 38
	LCURLY  shift 39
	RCURLY  shift 40
	SEMI  shift 41
	INT_LIT  reduce 75
	BOOL_LIT  reduce 73
	IF  reduce 36

	while_stmt  goto 42
	compound_stmt  goto 43
	if_stmt  goto 44
	print_stmt  goto 45
	stmt  goto 46
	return_stmt  goto 47
	expr_stmt  goto 48
	expr  goto 49
	$$8  goto 50
	$$15  goto 51
	$$16  goto 52


state 32
	local_decl : type_spec IDENT . $$11 SEMI  (47)
	$$11 : .  (46)

	.  reduce 46

	$$11  goto 53


state 33
	expr : NOT . expr  (59)
	$$15 : .  (73)
	$$16 : .  (75)

	NOT  shift 33
	IDENT  shift 54
	LCIRCLE  shift 38
	INT_LIT  reduce 75
	BOOL_LIT  reduce 73

	expr  goto 55
	$$15  goto 51
	$$16  goto 52


state 34
	expr_stmt : IDENT . $$5 ASSIGN expr_stmt  (30)
	expr : IDENT . $$12  (68)
	expr : IDENT . $$13 LCIRCLE args RCIRCLE  (70)
	expr : IDENT . $$14 LSQUARE expr RSQUARE  (72)
	$$5 : .  (29)
	$$12 : .  (67)
	$$13 : .  (69)
	$$14 : .  (71)

	ASSIGN  reduce 29
	OR  reduce 67
	AND  reduce 67
	EQ  reduce 67
	NE  reduce 67
	LE  reduce 67
	LT  reduce 67
	GE  reduce 67
	GT  reduce 67
	ADD  reduce 67
	SUB  reduce 67
	MUL  reduce 67
	DIV  reduce 67
	MOD  reduce 67
	LCIRCLE  reduce 69
	LSQUARE  reduce 71
	SEMI  reduce 67

	$$5  goto 56
	$$12  goto 57
	$$13  goto 58
	$$14  goto 59


state 35
	print_stmt : PRINT . expr $$10 SEMI  (42)
	$$15 : .  (73)
	$$16 : .  (75)

	NOT  shift 33
	IDENT  shift 54
	LCIRCLE  shift 38
	INT_LIT  reduce 75
	BOOL_LIT  reduce 73

	expr  goto 60
	$$15  goto 51
	$$16  goto 52


state 36
	while_stmt : WHILE . $$6 LCIRCLE expr $$7 RCIRCLE stmt  (34)
	$$6 : .  (32)

	.  reduce 32

	$$6  goto 61


state 37
	return_stmt : RETURN . expr SEMI  (43)
	$$15 : .  (73)
	$$16 : .  (75)

	NOT  shift 33
	IDENT  shift 54
	LCIRCLE  shift 38
	INT_LIT  reduce 75
	BOOL_LIT  reduce 73

	expr  goto 62
	$$15  goto 51
	$$16  goto 52


state 38
	expr : LCIRCLE . expr RCIRCLE  (66)
	$$15 : .  (73)
	$$16 : .  (75)

	NOT  shift 33
	IDENT  shift 54
	LCIRCLE  shift 38
	INT_LIT  reduce 75
	BOOL_LIT  reduce 73

	expr  goto 63
	$$15  goto 51
	$$16  goto 52


state 39
	compound_stmt : LCURLY . local_decls stmt_list RCURLY  (35)
	local_decls : .  (45)

	.  reduce 45

	local_decls  goto 64


state 40
	fun_decl : type_spec IDENT $$3 LCIRCLE params RCIRCLE $$4 LCURLY local_decls stmt_list RCURLY .  (14)

	.  reduce 14


state 41
	stmt : SEMI .  (28)

	.  reduce 28


state 42
	stmt : while_stmt .  (25)

	.  reduce 25


state 43
	stmt : compound_stmt .  (23)

	.  reduce 23


state 44
	stmt : if_stmt .  (24)

	.  reduce 24


state 45
	stmt : print_stmt .  (27)

	.  reduce 27


state 46
	stmt_list : stmt_list stmt .  (20)

	.  reduce 20


state 47
	stmt : return_stmt .  (26)

	.  reduce 26


state 48
	stmt : expr_stmt .  (22)

	.  reduce 22


state 49
	expr_stmt : expr . SEMI  (31)
	expr : expr . ADD expr  (52)
	expr : expr . SUB expr  (53)
	expr : expr . MUL expr  (54)
	expr : expr . DIV expr  (55)
	expr : expr . MOD expr  (56)
	expr : expr . OR expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . EQ expr  (60)
	expr : expr . NE expr  (61)
	expr : expr . LE expr  (62)
	expr : expr . LT expr  (63)
	expr : expr . GE expr  (64)
	expr : expr . GT expr  (65)

	OR  shift 65
	AND  shift 66
	EQ  shift 67
	NE  shift 68
	LE  shift 69
	LT  shift 70
	GE  shift 71
	GT  shift 72
	ADD  shift 73
	SUB  shift 74
	MUL  shift 75
	DIV  shift 76
	MOD  shift 77
	SEMI  shift 78
	.  error


state 50
	if_stmt : $$8 . IF LCIRCLE expr $$9 RCIRCLE LCURLY stmt RCURLY else_stmt  (38)

	IF  shift 79
	.  error


state 51
	expr : $$15 . BOOL_LIT  (74)

	BOOL_LIT  shift 80
	.  error


state 52
	expr : $$16 . INT_LIT  (76)

	INT_LIT  shift 81
	.  error


state 53
	local_decl : type_spec IDENT $$11 . SEMI  (47)

	SEMI  shift 82
	.  error


state 54
	expr : IDENT . $$12  (68)
	expr : IDENT . $$13 LCIRCLE args RCIRCLE  (70)
	expr : IDENT . $$14 LSQUARE expr RSQUARE  (72)
	$$12 : .  (67)
	$$13 : .  (69)
	$$14 : .  (71)

	OR  reduce 67
	AND  reduce 67
	EQ  reduce 67
	NE  reduce 67
	LE  reduce 67
	LT  reduce 67
	GE  reduce 67
	GT  reduce 67
	ADD  reduce 67
	SUB  reduce 67
	MUL  reduce 67
	DIV  reduce 67
	MOD  reduce 67
	LCIRCLE  reduce 69
	RCIRCLE  reduce 67
	LSQUARE  reduce 71
	RSQUARE  reduce 67
	SEMI  reduce 67
	COMMA  reduce 67

	$$12  goto 57
	$$13  goto 58
	$$14  goto 59


state 55
	expr : expr . ADD expr  (52)
	expr : expr . SUB expr  (53)
	expr : expr . MUL expr  (54)
	expr : expr . DIV expr  (55)
	expr : expr . MOD expr  (56)
	expr : expr . OR expr  (57)
	expr : expr . AND expr  (58)
	expr : NOT expr .  (59)
	expr : expr . EQ expr  (60)
	expr : expr . NE expr  (61)
	expr : expr . LE expr  (62)
	expr : expr . LT expr  (63)
	expr : expr . GE expr  (64)
	expr : expr . GT expr  (65)

	.  reduce 59


state 56
	expr_stmt : IDENT $$5 . ASSIGN expr_stmt  (30)

	ASSIGN  shift 83
	.  error


state 57
	expr : IDENT $$12 .  (68)

	.  reduce 68


state 58
	expr : IDENT $$13 . LCIRCLE args RCIRCLE  (70)

	LCIRCLE  shift 84
	.  error


state 59
	expr : IDENT $$14 . LSQUARE expr RSQUARE  (72)

	LSQUARE  shift 85
	.  error


state 60
	print_stmt : PRINT expr . $$10 SEMI  (42)
	expr : expr . ADD expr  (52)
	expr : expr . SUB expr  (53)
	expr : expr . MUL expr  (54)
	expr : expr . DIV expr  (55)
	expr : expr . MOD expr  (56)
	expr : expr . OR expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . EQ expr  (60)
	expr : expr . NE expr  (61)
	expr : expr . LE expr  (62)
	expr : expr . LT expr  (63)
	expr : expr . GE expr  (64)
	expr : expr . GT expr  (65)
	$$10 : .  (41)

	OR  shift 65
	AND  shift 66
	EQ  shift 67
	NE  shift 68
	LE  shift 69
	LT  shift 70
	GE  shift 71
	GT  shift 72
	ADD  shift 73
	SUB  shift 74
	MUL  shift 75
	DIV  shift 76
	MOD  shift 77
	SEMI  reduce 41

	$$10  goto 86


state 61
	while_stmt : WHILE $$6 . LCIRCLE expr $$7 RCIRCLE stmt  (34)

	LCIRCLE  shift 87
	.  error


state 62
	return_stmt : RETURN expr . SEMI  (43)
	expr : expr . ADD expr  (52)
	expr : expr . SUB expr  (53)
	expr : expr . MUL expr  (54)
	expr : expr . DIV expr  (55)
	expr : expr . MOD expr  (56)
	expr : expr . OR expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . EQ expr  (60)
	expr : expr . NE expr  (61)
	expr : expr . LE expr  (62)
	expr : expr . LT expr  (63)
	expr : expr . GE expr  (64)
	expr : expr . GT expr  (65)

	OR  shift 65
	AND  shift 66
	EQ  shift 67
	NE  shift 68
	LE  shift 69
	LT  shift 70
	GE  shift 71
	GT  shift 72
	ADD  shift 73
	SUB  shift 74
	MUL  shift 75
	DIV  shift 76
	MOD  shift 77
	SEMI  shift 88
	.  error


state 63
	expr : expr . ADD expr  (52)
	expr : expr . SUB expr  (53)
	expr : expr . MUL expr  (54)
	expr : expr . DIV expr  (55)
	expr : expr . MOD expr  (56)
	expr : expr . OR expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . EQ expr  (60)
	expr : expr . NE expr  (61)
	expr : expr . LE expr  (62)
	expr : expr . LT expr  (63)
	expr : expr . GE expr  (64)
	expr : expr . GT expr  (65)
	expr : LCIRCLE expr . RCIRCLE  (66)

	OR  shift 65
	AND  shift 66
	EQ  shift 67
	NE  shift 68
	LE  shift 69
	LT  shift 70
	GE  shift 71
	GT  shift 72
	ADD  shift 73
	SUB  shift 74
	MUL  shift 75
	DIV  shift 76
	MOD  shift 77
	RCIRCLE  shift 89
	.  error


state 64
	compound_stmt : LCURLY local_decls . stmt_list RCURLY  (35)
	local_decls : local_decls . local_decl  (44)
	stmt_list : .  (21)

	BOOL  shift 3
	INT  shift 4
	NOT  reduce 21
	IDENT  reduce 21
	INT_LIT  reduce 21
	BOOL_LIT  reduce 21
	IF  reduce 21
	PRINT  reduce 21
	WHILE  reduce 21
	RETURN  reduce 21
	LCIRCLE  reduce 21
	LCURLY  reduce 21
	RCURLY  reduce 21
	SEMI  reduce 21

	type_spec  goto 29
	local_decl  goto 30
	stmt_list  goto 90


state 65
	expr : expr OR . expr  (57)
	$$15 : .  (73)
	$$16 : .  (75)

	NOT  shift 33
	IDENT  shift 54
	LCIRCLE  shift 38
	INT_LIT  reduce 75
	BOOL_LIT  reduce 73

	expr  goto 91
	$$15  goto 51
	$$16  goto 52


state 66
	expr : expr AND . expr  (58)
	$$15 : .  (73)
	$$16 : .  (75)

	NOT  shift 33
	IDENT  shift 54
	LCIRCLE  shift 38
	INT_LIT  reduce 75
	BOOL_LIT  reduce 73

	expr  goto 92
	$$15  goto 51
	$$16  goto 52


state 67
	expr : expr EQ . expr  (60)
	$$15 : .  (73)
	$$16 : .  (75)

	NOT  shift 33
	IDENT  shift 54
	LCIRCLE  shift 38
	INT_LIT  reduce 75
	BOOL_LIT  reduce 73

	expr  goto 93
	$$15  goto 51
	$$16  goto 52


state 68
	expr : expr NE . expr  (61)
	$$15 : .  (73)
	$$16 : .  (75)

	NOT  shift 33
	IDENT  shift 54
	LCIRCLE  shift 38
	INT_LIT  reduce 75
	BOOL_LIT  reduce 73

	expr  goto 94
	$$15  goto 51
	$$16  goto 52


state 69
	expr : expr LE . expr  (62)
	$$15 : .  (73)
	$$16 : .  (75)

	NOT  shift 33
	IDENT  shift 54
	LCIRCLE  shift 38
	INT_LIT  reduce 75
	BOOL_LIT  reduce 73

	expr  goto 95
	$$15  goto 51
	$$16  goto 52


state 70
	expr : expr LT . expr  (63)
	$$15 : .  (73)
	$$16 : .  (75)

	NOT  shift 33
	IDENT  shift 54
	LCIRCLE  shift 38
	INT_LIT  reduce 75
	BOOL_LIT  reduce 73

	expr  goto 96
	$$15  goto 51
	$$16  goto 52


state 71
	expr : expr GE . expr  (64)
	$$15 : .  (73)
	$$16 : .  (75)

	NOT  shift 33
	IDENT  shift 54
	LCIRCLE  shift 38
	INT_LIT  reduce 75
	BOOL_LIT  reduce 73

	expr  goto 97
	$$15  goto 51
	$$16  goto 52


state 72
	expr : expr GT . expr  (65)
	$$15 : .  (73)
	$$16 : .  (75)

	NOT  shift 33
	IDENT  shift 54
	LCIRCLE  shift 38
	INT_LIT  reduce 75
	BOOL_LIT  reduce 73

	expr  goto 98
	$$15  goto 51
	$$16  goto 52


state 73
	expr : expr ADD . expr  (52)
	$$15 : .  (73)
	$$16 : .  (75)

	NOT  shift 33
	IDENT  shift 54
	LCIRCLE  shift 38
	INT_LIT  reduce 75
	BOOL_LIT  reduce 73

	expr  goto 99
	$$15  goto 51
	$$16  goto 52


state 74
	expr : expr SUB . expr  (53)
	$$15 : .  (73)
	$$16 : .  (75)

	NOT  shift 33
	IDENT  shift 54
	LCIRCLE  shift 38
	INT_LIT  reduce 75
	BOOL_LIT  reduce 73

	expr  goto 100
	$$15  goto 51
	$$16  goto 52


state 75
	expr : expr MUL . expr  (54)
	$$15 : .  (73)
	$$16 : .  (75)

	NOT  shift 33
	IDENT  shift 54
	LCIRCLE  shift 38
	INT_LIT  reduce 75
	BOOL_LIT  reduce 73

	expr  goto 101
	$$15  goto 51
	$$16  goto 52


state 76
	expr : expr DIV . expr  (55)
	$$15 : .  (73)
	$$16 : .  (75)

	NOT  shift 33
	IDENT  shift 54
	LCIRCLE  shift 38
	INT_LIT  reduce 75
	BOOL_LIT  reduce 73

	expr  goto 102
	$$15  goto 51
	$$16  goto 52


state 77
	expr : expr MOD . expr  (56)
	$$15 : .  (73)
	$$16 : .  (75)

	NOT  shift 33
	IDENT  shift 54
	LCIRCLE  shift 38
	INT_LIT  reduce 75
	BOOL_LIT  reduce 73

	expr  goto 103
	$$15  goto 51
	$$16  goto 52


state 78
	expr_stmt : expr SEMI .  (31)

	.  reduce 31


state 79
	if_stmt : $$8 IF . LCIRCLE expr $$9 RCIRCLE LCURLY stmt RCURLY else_stmt  (38)

	LCIRCLE  shift 104
	.  error


state 80
	expr : $$15 BOOL_LIT .  (74)

	.  reduce 74


state 81
	expr : $$16 INT_LIT .  (76)

	.  reduce 76


state 82
	local_decl : type_spec IDENT $$11 SEMI .  (47)

	.  reduce 47


state 83
	expr_stmt : IDENT $$5 ASSIGN . expr_stmt  (30)
	$$15 : .  (73)
	$$16 : .  (75)

	NOT  shift 33
	IDENT  shift 34
	LCIRCLE  shift 38
	INT_LIT  reduce 75
	BOOL_LIT  reduce 73

	expr_stmt  goto 105
	expr  goto 49
	$$15  goto 51
	$$16  goto 52


state 84
	expr : IDENT $$13 LCIRCLE . args RCIRCLE  (70)
	args : .  (51)
	$$15 : .  (73)
	$$16 : .  (75)

	NOT  shift 33
	IDENT  shift 54
	LCIRCLE  shift 38
	INT_LIT  reduce 75
	BOOL_LIT  reduce 73
	RCIRCLE  reduce 51

	args  goto 106
	arg_list  goto 107
	expr  goto 108
	$$15  goto 51
	$$16  goto 52


state 85
	expr : IDENT $$14 LSQUARE . expr RSQUARE  (72)
	$$15 : .  (73)
	$$16 : .  (75)

	NOT  shift 33
	IDENT  shift 54
	LCIRCLE  shift 38
	INT_LIT  reduce 75
	BOOL_LIT  reduce 73

	expr  goto 109
	$$15  goto 51
	$$16  goto 52


state 86
	print_stmt : PRINT expr $$10 . SEMI  (42)

	SEMI  shift 110
	.  error


state 87
	while_stmt : WHILE $$6 LCIRCLE . expr $$7 RCIRCLE stmt  (34)
	$$15 : .  (73)
	$$16 : .  (75)

	NOT  shift 33
	IDENT  shift 54
	LCIRCLE  shift 38
	INT_LIT  reduce 75
	BOOL_LIT  reduce 73

	expr  goto 111
	$$15  goto 51
	$$16  goto 52


state 88
	return_stmt : RETURN expr SEMI .  (43)

	.  reduce 43


state 89
	expr : LCIRCLE expr RCIRCLE .  (66)

	.  reduce 66


state 90
	stmt_list : stmt_list . stmt  (20)
	compound_stmt : LCURLY local_decls stmt_list . RCURLY  (35)
	$$8 : .  (36)
	$$15 : .  (73)
	$$16 : .  (75)

	NOT  shift 33
	IDENT  shift 34
	PRINT  shift 35
	WHILE  shift 36
	RETURN  shift 37
	LCIRCLE  shift 38
	LCURLY  shift 39
	RCURLY  shift 112
	SEMI  shift 41
	INT_LIT  reduce 75
	BOOL_LIT  reduce 73
	IF  reduce 36

	while_stmt  goto 42
	compound_stmt  goto 43
	if_stmt  goto 44
	print_stmt  goto 45
	stmt  goto 46
	return_stmt  goto 47
	expr_stmt  goto 48
	expr  goto 49
	$$8  goto 50
	$$15  goto 51
	$$16  goto 52


state 91
	expr : expr . ADD expr  (52)
	expr : expr . SUB expr  (53)
	expr : expr . MUL expr  (54)
	expr : expr . DIV expr  (55)
	expr : expr . MOD expr  (56)
	expr : expr . OR expr  (57)
	expr : expr OR expr .  (57)
	expr : expr . AND expr  (58)
	expr : expr . EQ expr  (60)
	expr : expr . NE expr  (61)
	expr : expr . LE expr  (62)
	expr : expr . LT expr  (63)
	expr : expr . GE expr  (64)
	expr : expr . GT expr  (65)

	AND  shift 66
	EQ  shift 67
	NE  shift 68
	LE  shift 69
	LT  shift 70
	GE  shift 71
	GT  shift 72
	ADD  shift 73
	SUB  shift 74
	MUL  shift 75
	DIV  shift 76
	MOD  shift 77
	OR  reduce 57
	RCIRCLE  reduce 57
	RSQUARE  reduce 57
	SEMI  reduce 57
	COMMA  reduce 57


state 92
	expr : expr . ADD expr  (52)
	expr : expr . SUB expr  (53)
	expr : expr . MUL expr  (54)
	expr : expr . DIV expr  (55)
	expr : expr . MOD expr  (56)
	expr : expr . OR expr  (57)
	expr : expr . AND expr  (58)
	expr : expr AND expr .  (58)
	expr : expr . EQ expr  (60)
	expr : expr . NE expr  (61)
	expr : expr . LE expr  (62)
	expr : expr . LT expr  (63)
	expr : expr . GE expr  (64)
	expr : expr . GT expr  (65)

	EQ  shift 67
	NE  shift 68
	LE  shift 69
	LT  shift 70
	GE  shift 71
	GT  shift 72
	ADD  shift 73
	SUB  shift 74
	MUL  shift 75
	DIV  shift 76
	MOD  shift 77
	OR  reduce 58
	AND  reduce 58
	RCIRCLE  reduce 58
	RSQUARE  reduce 58
	SEMI  reduce 58
	COMMA  reduce 58


state 93
	expr : expr . ADD expr  (52)
	expr : expr . SUB expr  (53)
	expr : expr . MUL expr  (54)
	expr : expr . DIV expr  (55)
	expr : expr . MOD expr  (56)
	expr : expr . OR expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . EQ expr  (60)
	expr : expr EQ expr .  (60)
	expr : expr . NE expr  (61)
	expr : expr . LE expr  (62)
	expr : expr . LT expr  (63)
	expr : expr . GE expr  (64)
	expr : expr . GT expr  (65)

	LE  shift 69
	LT  shift 70
	GE  shift 71
	GT  shift 72
	ADD  shift 73
	SUB  shift 74
	MUL  shift 75
	DIV  shift 76
	MOD  shift 77
	OR  reduce 60
	AND  reduce 60
	EQ  reduce 60
	NE  reduce 60
	RCIRCLE  reduce 60
	RSQUARE  reduce 60
	SEMI  reduce 60
	COMMA  reduce 60


state 94
	expr : expr . ADD expr  (52)
	expr : expr . SUB expr  (53)
	expr : expr . MUL expr  (54)
	expr : expr . DIV expr  (55)
	expr : expr . MOD expr  (56)
	expr : expr . OR expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . EQ expr  (60)
	expr : expr . NE expr  (61)
	expr : expr NE expr .  (61)
	expr : expr . LE expr  (62)
	expr : expr . LT expr  (63)
	expr : expr . GE expr  (64)
	expr : expr . GT expr  (65)

	LE  shift 69
	LT  shift 70
	GE  shift 71
	GT  shift 72
	ADD  shift 73
	SUB  shift 74
	MUL  shift 75
	DIV  shift 76
	MOD  shift 77
	OR  reduce 61
	AND  reduce 61
	EQ  reduce 61
	NE  reduce 61
	RCIRCLE  reduce 61
	RSQUARE  reduce 61
	SEMI  reduce 61
	COMMA  reduce 61


state 95
	expr : expr . ADD expr  (52)
	expr : expr . SUB expr  (53)
	expr : expr . MUL expr  (54)
	expr : expr . DIV expr  (55)
	expr : expr . MOD expr  (56)
	expr : expr . OR expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . EQ expr  (60)
	expr : expr . NE expr  (61)
	expr : expr . LE expr  (62)
	expr : expr LE expr .  (62)
	expr : expr . LT expr  (63)
	expr : expr . GE expr  (64)
	expr : expr . GT expr  (65)

	ADD  shift 73
	SUB  shift 74
	MUL  shift 75
	DIV  shift 76
	MOD  shift 77
	OR  reduce 62
	AND  reduce 62
	EQ  reduce 62
	NE  reduce 62
	LE  reduce 62
	LT  reduce 62
	GE  reduce 62
	GT  reduce 62
	RCIRCLE  reduce 62
	RSQUARE  reduce 62
	SEMI  reduce 62
	COMMA  reduce 62


state 96
	expr : expr . ADD expr  (52)
	expr : expr . SUB expr  (53)
	expr : expr . MUL expr  (54)
	expr : expr . DIV expr  (55)
	expr : expr . MOD expr  (56)
	expr : expr . OR expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . EQ expr  (60)
	expr : expr . NE expr  (61)
	expr : expr . LE expr  (62)
	expr : expr . LT expr  (63)
	expr : expr LT expr .  (63)
	expr : expr . GE expr  (64)
	expr : expr . GT expr  (65)

	ADD  shift 73
	SUB  shift 74
	MUL  shift 75
	DIV  shift 76
	MOD  shift 77
	OR  reduce 63
	AND  reduce 63
	EQ  reduce 63
	NE  reduce 63
	LE  reduce 63
	LT  reduce 63
	GE  reduce 63
	GT  reduce 63
	RCIRCLE  reduce 63
	RSQUARE  reduce 63
	SEMI  reduce 63
	COMMA  reduce 63


state 97
	expr : expr . ADD expr  (52)
	expr : expr . SUB expr  (53)
	expr : expr . MUL expr  (54)
	expr : expr . DIV expr  (55)
	expr : expr . MOD expr  (56)
	expr : expr . OR expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . EQ expr  (60)
	expr : expr . NE expr  (61)
	expr : expr . LE expr  (62)
	expr : expr . LT expr  (63)
	expr : expr . GE expr  (64)
	expr : expr GE expr .  (64)
	expr : expr . GT expr  (65)

	ADD  shift 73
	SUB  shift 74
	MUL  shift 75
	DIV  shift 76
	MOD  shift 77
	OR  reduce 64
	AND  reduce 64
	EQ  reduce 64
	NE  reduce 64
	LE  reduce 64
	LT  reduce 64
	GE  reduce 64
	GT  reduce 64
	RCIRCLE  reduce 64
	RSQUARE  reduce 64
	SEMI  reduce 64
	COMMA  reduce 64


state 98
	expr : expr . ADD expr  (52)
	expr : expr . SUB expr  (53)
	expr : expr . MUL expr  (54)
	expr : expr . DIV expr  (55)
	expr : expr . MOD expr  (56)
	expr : expr . OR expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . EQ expr  (60)
	expr : expr . NE expr  (61)
	expr : expr . LE expr  (62)
	expr : expr . LT expr  (63)
	expr : expr . GE expr  (64)
	expr : expr . GT expr  (65)
	expr : expr GT expr .  (65)

	ADD  shift 73
	SUB  shift 74
	MUL  shift 75
	DIV  shift 76
	MOD  shift 77
	OR  reduce 65
	AND  reduce 65
	EQ  reduce 65
	NE  reduce 65
	LE  reduce 65
	LT  reduce 65
	GE  reduce 65
	GT  reduce 65
	RCIRCLE  reduce 65
	RSQUARE  reduce 65
	SEMI  reduce 65
	COMMA  reduce 65


state 99
	expr : expr . ADD expr  (52)
	expr : expr ADD expr .  (52)
	expr : expr . SUB expr  (53)
	expr : expr . MUL expr  (54)
	expr : expr . DIV expr  (55)
	expr : expr . MOD expr  (56)
	expr : expr . OR expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . EQ expr  (60)
	expr : expr . NE expr  (61)
	expr : expr . LE expr  (62)
	expr : expr . LT expr  (63)
	expr : expr . GE expr  (64)
	expr : expr . GT expr  (65)

	MUL  shift 75
	DIV  shift 76
	MOD  shift 77
	OR  reduce 52
	AND  reduce 52
	EQ  reduce 52
	NE  reduce 52
	LE  reduce 52
	LT  reduce 52
	GE  reduce 52
	GT  reduce 52
	ADD  reduce 52
	SUB  reduce 52
	RCIRCLE  reduce 52
	RSQUARE  reduce 52
	SEMI  reduce 52
	COMMA  reduce 52


state 100
	expr : expr . ADD expr  (52)
	expr : expr . SUB expr  (53)
	expr : expr SUB expr .  (53)
	expr : expr . MUL expr  (54)
	expr : expr . DIV expr  (55)
	expr : expr . MOD expr  (56)
	expr : expr . OR expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . EQ expr  (60)
	expr : expr . NE expr  (61)
	expr : expr . LE expr  (62)
	expr : expr . LT expr  (63)
	expr : expr . GE expr  (64)
	expr : expr . GT expr  (65)

	MUL  shift 75
	DIV  shift 76
	MOD  shift 77
	OR  reduce 53
	AND  reduce 53
	EQ  reduce 53
	NE  reduce 53
	LE  reduce 53
	LT  reduce 53
	GE  reduce 53
	GT  reduce 53
	ADD  reduce 53
	SUB  reduce 53
	RCIRCLE  reduce 53
	RSQUARE  reduce 53
	SEMI  reduce 53
	COMMA  reduce 53


state 101
	expr : expr . ADD expr  (52)
	expr : expr . SUB expr  (53)
	expr : expr . MUL expr  (54)
	expr : expr MUL expr .  (54)
	expr : expr . DIV expr  (55)
	expr : expr . MOD expr  (56)
	expr : expr . OR expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . EQ expr  (60)
	expr : expr . NE expr  (61)
	expr : expr . LE expr  (62)
	expr : expr . LT expr  (63)
	expr : expr . GE expr  (64)
	expr : expr . GT expr  (65)

	.  reduce 54


state 102
	expr : expr . ADD expr  (52)
	expr : expr . SUB expr  (53)
	expr : expr . MUL expr  (54)
	expr : expr . DIV expr  (55)
	expr : expr DIV expr .  (55)
	expr : expr . MOD expr  (56)
	expr : expr . OR expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . EQ expr  (60)
	expr : expr . NE expr  (61)
	expr : expr . LE expr  (62)
	expr : expr . LT expr  (63)
	expr : expr . GE expr  (64)
	expr : expr . GT expr  (65)

	.  reduce 55


state 103
	expr : expr . ADD expr  (52)
	expr : expr . SUB expr  (53)
	expr : expr . MUL expr  (54)
	expr : expr . DIV expr  (55)
	expr : expr . MOD expr  (56)
	expr : expr MOD expr .  (56)
	expr : expr . OR expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . EQ expr  (60)
	expr : expr . NE expr  (61)
	expr : expr . LE expr  (62)
	expr : expr . LT expr  (63)
	expr : expr . GE expr  (64)
	expr : expr . GT expr  (65)

	.  reduce 56


state 104
	if_stmt : $$8 IF LCIRCLE . expr $$9 RCIRCLE LCURLY stmt RCURLY else_stmt  (38)
	$$15 : .  (73)
	$$16 : .  (75)

	NOT  shift 33
	IDENT  shift 54
	LCIRCLE  shift 38
	INT_LIT  reduce 75
	BOOL_LIT  reduce 73

	expr  goto 113
	$$15  goto 51
	$$16  goto 52


state 105
	expr_stmt : IDENT $$5 ASSIGN expr_stmt .  (30)

	.  reduce 30


state 106
	expr : IDENT $$13 LCIRCLE args . RCIRCLE  (70)

	RCIRCLE  shift 114
	.  error


state 107
	arg_list : arg_list . COMMA expr  (48)
	args : arg_list .  (50)

	COMMA  shift 115
	RCIRCLE  reduce 50


state 108
	arg_list : expr .  (49)
	expr : expr . ADD expr  (52)
	expr : expr . SUB expr  (53)
	expr : expr . MUL expr  (54)
	expr : expr . DIV expr  (55)
	expr : expr . MOD expr  (56)
	expr : expr . OR expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . EQ expr  (60)
	expr : expr . NE expr  (61)
	expr : expr . LE expr  (62)
	expr : expr . LT expr  (63)
	expr : expr . GE expr  (64)
	expr : expr . GT expr  (65)

	OR  shift 65
	AND  shift 66
	EQ  shift 67
	NE  shift 68
	LE  shift 69
	LT  shift 70
	GE  shift 71
	GT  shift 72
	ADD  shift 73
	SUB  shift 74
	MUL  shift 75
	DIV  shift 76
	MOD  shift 77
	RCIRCLE  reduce 49
	COMMA  reduce 49


state 109
	expr : expr . ADD expr  (52)
	expr : expr . SUB expr  (53)
	expr : expr . MUL expr  (54)
	expr : expr . DIV expr  (55)
	expr : expr . MOD expr  (56)
	expr : expr . OR expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . EQ expr  (60)
	expr : expr . NE expr  (61)
	expr : expr . LE expr  (62)
	expr : expr . LT expr  (63)
	expr : expr . GE expr  (64)
	expr : expr . GT expr  (65)
	expr : IDENT $$14 LSQUARE expr . RSQUARE  (72)

	OR  shift 65
	AND  shift 66
	EQ  shift 67
	NE  shift 68
	LE  shift 69
	LT  shift 70
	GE  shift 71
	GT  shift 72
	ADD  shift 73
	SUB  shift 74
	MUL  shift 75
	DIV  shift 76
	MOD  shift 77
	RSQUARE  shift 116
	.  error


state 110
	print_stmt : PRINT expr $$10 SEMI .  (42)

	.  reduce 42


state 111
	while_stmt : WHILE $$6 LCIRCLE expr . $$7 RCIRCLE stmt  (34)
	expr : expr . ADD expr  (52)
	expr : expr . SUB expr  (53)
	expr : expr . MUL expr  (54)
	expr : expr . DIV expr  (55)
	expr : expr . MOD expr  (56)
	expr : expr . OR expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . EQ expr  (60)
	expr : expr . NE expr  (61)
	expr : expr . LE expr  (62)
	expr : expr . LT expr  (63)
	expr : expr . GE expr  (64)
	expr : expr . GT expr  (65)
	$$7 : .  (33)

	OR  shift 65
	AND  shift 66
	EQ  shift 67
	NE  shift 68
	LE  shift 69
	LT  shift 70
	GE  shift 71
	GT  shift 72
	ADD  shift 73
	SUB  shift 74
	MUL  shift 75
	DIV  shift 76
	MOD  shift 77
	RCIRCLE  reduce 33

	$$7  goto 117


state 112
	compound_stmt : LCURLY local_decls stmt_list RCURLY .  (35)

	.  reduce 35


state 113
	if_stmt : $$8 IF LCIRCLE expr . $$9 RCIRCLE LCURLY stmt RCURLY else_stmt  (38)
	expr : expr . ADD expr  (52)
	expr : expr . SUB expr  (53)
	expr : expr . MUL expr  (54)
	expr : expr . DIV expr  (55)
	expr : expr . MOD expr  (56)
	expr : expr . OR expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . EQ expr  (60)
	expr : expr . NE expr  (61)
	expr : expr . LE expr  (62)
	expr : expr . LT expr  (63)
	expr : expr . GE expr  (64)
	expr : expr . GT expr  (65)
	$$9 : .  (37)

	OR  shift 65
	AND  shift 66
	EQ  shift 67
	NE  shift 68
	LE  shift 69
	LT  shift 70
	GE  shift 71
	GT  shift 72
	ADD  shift 73
	SUB  shift 74
	MUL  shift 75
	DIV  shift 76
	MOD  shift 77
	RCIRCLE  reduce 37

	$$9  goto 118


state 114
	expr : IDENT $$13 LCIRCLE args RCIRCLE .  (70)

	.  reduce 70


state 115
	arg_list : arg_list COMMA . expr  (48)
	$$15 : .  (73)
	$$16 : .  (75)

	NOT  shift 33
	IDENT  shift 54
	LCIRCLE  shift 38
	INT_LIT  reduce 75
	BOOL_LIT  reduce 73

	expr  goto 119
	$$15  goto 51
	$$16  goto 52


state 116
	expr : IDENT $$14 LSQUARE expr RSQUARE .  (72)

	.  reduce 72


state 117
	while_stmt : WHILE $$6 LCIRCLE expr $$7 . RCIRCLE stmt  (34)

	RCIRCLE  shift 120
	.  error


state 118
	if_stmt : $$8 IF LCIRCLE expr $$9 . RCIRCLE LCURLY stmt RCURLY else_stmt  (38)

	RCIRCLE  shift 121
	.  error


state 119
	arg_list : arg_list COMMA expr .  (48)
	expr : expr . ADD expr  (52)
	expr : expr . SUB expr  (53)
	expr : expr . MUL expr  (54)
	expr : expr . DIV expr  (55)
	expr : expr . MOD expr  (56)
	expr : expr . OR expr  (57)
	expr : expr . AND expr  (58)
	expr : expr . EQ expr  (60)
	expr : expr . NE expr  (61)
	expr : expr . LE expr  (62)
	expr : expr . LT expr  (63)
	expr : expr . GE expr  (64)
	expr : expr . GT expr  (65)

	OR  shift 65
	AND  shift 66
	EQ  shift 67
	NE  shift 68
	LE  shift 69
	LT  shift 70
	GE  shift 71
	GT  shift 72
	ADD  shift 73
	SUB  shift 74
	MUL  shift 75
	DIV  shift 76
	MOD  shift 77
	RCIRCLE  reduce 48
	COMMA  reduce 48


state 120
	while_stmt : WHILE $$6 LCIRCLE expr $$7 RCIRCLE . stmt  (34)
	$$8 : .  (36)
	$$15 : .  (73)
	$$16 : .  (75)

	NOT  shift 33
	IDENT  shift 34
	PRINT  shift 35
	WHILE  shift 36
	RETURN  shift 37
	LCIRCLE  shift 38
	LCURLY  shift 39
	SEMI  shift 41
	INT_LIT  reduce 75
	BOOL_LIT  reduce 73
	IF  reduce 36

	while_stmt  goto 42
	compound_stmt  goto 43
	if_stmt  goto 44
	print_stmt  goto 45
	stmt  goto 122
	return_stmt  goto 47
	expr_stmt  goto 48
	expr  goto 49
	$$8  goto 50
	$$15  goto 51
	$$16  goto 52


state 121
	if_stmt : $$8 IF LCIRCLE expr $$9 RCIRCLE . LCURLY stmt RCURLY else_stmt  (38)

	LCURLY  shift 123
	.  error


state 122
	while_stmt : WHILE $$6 LCIRCLE expr $$7 RCIRCLE stmt .  (34)

	.  reduce 34


state 123
	if_stmt : $$8 IF LCIRCLE expr $$9 RCIRCLE LCURLY . stmt RCURLY else_stmt  (38)
	$$8 : .  (36)
	$$15 : .  (73)
	$$16 : .  (75)

	NOT  shift 33
	IDENT  shift 34
	PRINT  shift 35
	WHILE  shift 36
	RETURN  shift 37
	LCIRCLE  shift 38
	LCURLY  shift 39
	SEMI  shift 41
	INT_LIT  reduce 75
	BOOL_LIT  reduce 73
	IF  reduce 36

	while_stmt  goto 42
	compound_stmt  goto 43
	if_stmt  goto 44
	print_stmt  goto 45
	stmt  goto 124
	return_stmt  goto 47
	expr_stmt  goto 48
	expr  goto 49
	$$8  goto 50
	$$15  goto 51
	$$16  goto 52


state 124
	if_stmt : $$8 IF LCIRCLE expr $$9 RCIRCLE LCURLY stmt . RCURLY else_stmt  (38)

	RCURLY  shift 125
	.  error


state 125
	if_stmt : $$8 IF LCIRCLE expr $$9 RCIRCLE LCURLY stmt RCURLY . else_stmt  (38)
	else_stmt : .  (40)

	ELSE  shift 126
	NOT  reduce 40
	IDENT  reduce 40
	INT_LIT  reduce 40
	BOOL_LIT  reduce 40
	IF  reduce 40
	PRINT  reduce 40
	WHILE  reduce 40
	RETURN  reduce 40
	LCIRCLE  reduce 40
	LCURLY  reduce 40
	RCURLY  reduce 40
	SEMI  reduce 40

	else_stmt  goto 127


state 126
	else_stmt : ELSE . LCURLY stmt RCURLY  (39)

	LCURLY  shift 128
	.  error


state 127
	if_stmt : $$8 IF LCIRCLE expr $$9 RCIRCLE LCURLY stmt RCURLY else_stmt .  (38)

	.  reduce 38


state 128
	else_stmt : ELSE LCURLY . stmt RCURLY  (39)
	$$8 : .  (36)
	$$15 : .  (73)
	$$16 : .  (75)

	NOT  shift 33
	IDENT  shift 34
	PRINT  shift 35
	WHILE  shift 36
	RETURN  shift 37
	LCIRCLE  shift 38
	LCURLY  shift 39
	SEMI  shift 41
	INT_LIT  reduce 75
	BOOL_LIT  reduce 73
	IF  reduce 36

	while_stmt  goto 42
	compound_stmt  goto 43
	if_stmt  goto 44
	print_stmt  goto 45
	stmt  goto 129
	return_stmt  goto 47
	expr_stmt  goto 48
	expr  goto 49
	$$8  goto 50
	$$15  goto 51
	$$16  goto 52


state 129
	else_stmt : ELSE LCURLY stmt . RCURLY  (39)

	RCURLY  shift 130
	.  error


state 130
	else_stmt : ELSE LCURLY stmt RCURLY .  (39)

	.  reduce 39


35 terminals, 40 nonterminals
77 grammar rules, 131 states
